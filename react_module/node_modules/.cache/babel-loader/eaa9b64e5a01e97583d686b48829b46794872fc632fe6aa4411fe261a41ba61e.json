{"ast":null,"code":"var _jsxFileName = \"E:\\\\back_end\\\\react_module\\\\src\\\\PrivateRoute.js\";\n// PrivateRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { isAuthenticated } from './component/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element,\n  ...rest\n}) => {\n  return isAuthenticated() ? /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 70\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","isAuthenticated","jsxDEV","_jsxDEV","PrivateRoute","element","rest","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["E:/back_end/react_module/src/PrivateRoute.js"],"sourcesContent":["// PrivateRoute.js\r\nimport React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { isAuthenticated } from './component/Login';\r\n\r\nconst PrivateRoute = ({ element, ...rest }) => {\r\n  return isAuthenticated() ? <Route {...rest} element={element} /> : <Navigate to=\"/\" replace />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC7C,OAAOL,eAAe,CAAC,CAAC,gBAAGE,OAAA,CAACJ,KAAK;IAAA,GAAKO,IAAI;IAAED,OAAO,EAAEA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGP,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC,GAAG;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChG,CAAC;AAACG,EAAA,GAFIT,YAAY;AAIlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}